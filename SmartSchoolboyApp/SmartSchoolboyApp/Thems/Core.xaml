<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--<Style x:Key="btnLogin" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource buttonLogin1}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Width="150" Height="35" CornerRadius="20" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource buttonLogin2}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="1" X="1"></TranslateTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
        
    </Style>-->

    <!--<Style x:Key="btnMinimaze" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#28AEED"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Content" Value="-"/>
        <Setter Property="FontSize" Value="16"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="18" Height="18" CornerRadius="9" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#278BEF"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="1" X="1"></TranslateTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
        
    </Style>-->

    <!--<Style x:Key="btnClose" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#DA34AE"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Content" Value="X"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="18" Height="18" CornerRadius="9" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#C62DAE"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="1" X="1"></TranslateTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
        
    </Style>-->

    <!--<Style x:Key="tBoxLogin" TargetType="{x:Type TextBox}">
        <Setter Property="MaxLength" Value="11"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="CaretBrush" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
        <Setter Property="Margin" Value="0 5 0 0"/>
    </Style>-->

    <!--<Style x:Key="pBoxLogin" TargetType="{x:Type PasswordBox}">
        <Setter Property="MaxLength" Value="25"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="CaretBrush" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
    </Style>-->

    <!--<Style x:Key="cBoxRememberMe" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>-->

    <Style x:Key="teacherDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        
    </Style>

    <!--<Style x:Key="tBoxAddEdit" TargetType="{x:Type TextBox}">
        <Setter Property="MaxLength" Value="11"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
        <Setter Property="Margin" Value="0 5 0 0"/>
    </Style>-->

    <!--<Style x:Key="btnSave" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource buttonLogin1}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Width="150" Height="35" CornerRadius="20" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource buttonLogin2}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="1" X="1"></TranslateTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>

    </Style>-->

</ResourceDictionary>